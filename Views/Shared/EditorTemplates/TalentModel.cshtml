@model WebApplication1.Models.TalentModel

<link href="https://rawgithub.com/hayageek/jquery-upload-file/master/css/uploadfile.css" rel="stylesheet">
<script src="https://rawgithub.com/hayageek/jquery-upload-file/master/js/jquery.uploadfile.min.js"></script>

<hr />

<div class="form-group">
    <div class="col-md-offset-2 col-md-10" style="color:red">
        @ViewBag.Message
    </div>
</div> 

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="hide"><div id="profilePictureFileUpload" name="profilePictureFileUpload"></div></div>
<div id="profilePictureStatus"></div>

<div class="form-group">
    <label class="control-label col-md-2"></label>
    <div class="col-sm-6 col-md-3 tile">
        <div class="thumbnail photoHeight">
            <div class="tileImageDiv">
                <button type="button" class="btn btn-default tileAction" aria-label="Left Align" onclick="$('#profilePictureFileUpload :input').trigger('click')">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </button>
                <img id="imgprofilePicture" src="@Model.ProfilePicture" class="tileImage">
            </div>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Gender)
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Nationality)
        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Representative, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Representative, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Representative, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.EyeColor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.EyeColor)
        @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.HairColor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.HairColor)
        @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Ethnicity, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Ethnicity)
        @Html.ValidationMessageFor(model => model.Ethnicity, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShoeSize, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ShoeSize, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShoeSize, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.WaistSize, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.WaistSize, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.WaistSize, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ShirtSize, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ShirtSize, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShirtSize, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Instagram, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <label class="control-label col-md-2"></label>
    <div class="col-md-10">
        <div id="bookPicturesFileUpload">Upload Photos</div>
        <div id="bookPicturesStatus"></div>
        <div id="photos"></div>
    </div>
</div>

@Html.EditorFor(model => model.ProfilePicture, new { htmlAttributes = new { @class = "hide" } })
@Html.EditorFor(model => model.BookPictures, new { htmlAttributes = new { @class = "hide" } })

<script>
    $(document).ready(function () {

        var tile = '<div class="col-sm-6 col-md-3 tile">' +
                        '<div class="thumbnail photoHeight">' +
                            '<div class="tileImageDiv">' +
                                '<button type="button" class="btn btn-default tileAction" aria-label="Left Align" onclick="deletePhoto($(this))">' +
                                    '<span class="glyphicon glyphicon-trash" aria-hidden="true"></span>' +
                                '</button>' +
                                '<img src="photoUrl" class="tileImage">' +
                            '</div>' +
                        '</div>' +
                    '</div>';

        var arr = $("#BookPictures").val().split(',');

        arr.forEach(function (url) {
            if (url) {
                $("#photos").append(tile.replace("photoUrl", url));
            }
        });

        var bookPicturesSettings = {
            url: "/Talent/AddPhoto",
            method: "POST",
            allowedTypes: "jpg,png,gif",
            fileName: "image",
            multiple: false,
            onSuccess: function (files, data, xhr) {
                $("#BookPictures").val($("#BookPictures").val() + "," + data);
                $("#photos").append(tile.replace("photoUrl", data));
            },
            onError: function (files, status, errMsg) {
                $("#bookPicturesStatus").html("<font color='red'>Upload Failed</font>");
            }
        }

        $("#bookPicturesFileUpload").uploadFile(bookPicturesSettings);

        var profilePictureSettings = {
            url: "/Talent/AddPhoto",
            method: "POST",
            allowedTypes: "jpg,png,gif",
            fileName: "image",
            multiple: false,
            onSuccess: function (files, data, xhr) {
                $("#ProfilePicture").val(data);
                $("#imgprofilePicture").attr("src", data);
            },
            onError: function (files, status, errMsg) {
                $("#profilePictureStatus").html("<font color='red'>Upload Failed</font>");
            }
        }

        $("#profilePictureFileUpload").uploadFile(profilePictureSettings);
    });

    function deletePhoto(e) {
        var urlToRemove = e.siblings().attr('src');
        $("#BookPictures").val($("#BookPictures").val().replace(urlToRemove, ""));
        e.parent().parent().parent().remove();
    }
</script>
