@using WebApplication1.Extensions
@model WebApplication1.Models.ProjectRoleModel

@using (Html.BeginCollectionItem("Roles"))
{
    <li role="presentation" class="active">
        <a data-toggle="collapse" href="#@Html.DisplayFor(model => model.NameNoSpace)" aria-expanded="false" aria-controls="@Html.DisplayFor(model => model.NameNoSpace)" class="collapsed">
            @Html.DisplayFor(model => model.Name)<span class="badge">@Html.DisplayFor(model => model.TalentCount)</span>
        </a>
        <button type="button" class="btn btn-default" aria-label="Left Align" onclick="deleteRole($(this))">
            <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
        </button>
        @if (Model.ProjectID > 0)
        {
            <button id="roleTalent" type="button" class="btn btn-default" aria-label="Left Align" onclick="window.location.href = '/Project/RoleTalent/@Html.DisplayFor(model => model.ID)'">
                <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
            </button>
        }
    </li>
    <li class="item">
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ProjectID)
        <div id="@Html.DisplayFor(model => model.NameNoSpace)" class="collapse" role="tabpanel">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Gender)
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Age Range", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AgeMin, new { htmlAttributes = new { @class = "form-controlLine" } })
                        to
                        @Html.EditorFor(model => model.AgeMax, new { htmlAttributes = new { @class = "form-controlLine" } })
                        @Html.ValidationMessageFor(model => model.AgeMin, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.AgeMax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Height Range", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HeightMin, new { htmlAttributes = new { @class = "form-controlLine" } })
                        to
                        @Html.EditorFor(model => model.HeightMax, new { htmlAttributes = new { @class = "form-controlLine" } })
                        @Html.ValidationMessageFor(model => model.HeightMin, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.HeightMax, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EthicApperance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 ethic-apperance" onclick="updateEthicApperance($(this))">
                        @Html.HiddenFor(model => model.EthicApperance)
                        <div class="checkbox">
                            <label class="checkbox-inline"><input type="checkbox" value="A">Any</label>
                        </div>
                        <div class="checkbox">
                            <label class="checkbox-inline cbw"><input type="checkbox" value="F">African American</label>
                            <label class="checkbox-inline"><input type="checkbox" value="S">Asian</label>
                        </div>
                        <div class="checkbox">
                            <label class="checkbox-inline cbw"><input type="checkbox" value="C">Caucasian</label>
                            <label class="checkbox-inline"><input type="checkbox" value="E">East Indian</label>
                        </div>
                        <div class="checkbox">
                            <label class="checkbox-inline cbw"><input type="checkbox" value="H">Hispanic</label>
                            <label class="checkbox-inline"><input type="checkbox" value="M">Middle Eastern</label>
                        </div>
                        <div class="checkbox">
                            <label class="checkbox-inline cbw"><input type="checkbox" value="X">Ethnically Ambiguous</label>
                            <label class="checkbox-inline"><input type="checkbox" value="N">Native American</label>
                        </div>
                        <div class="checkbox">
                            <label class="checkbox-inline"><input type="checkbox" value="P">Pacific Islander</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </li>
}